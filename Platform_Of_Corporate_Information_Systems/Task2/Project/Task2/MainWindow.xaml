<Window x:Class="Task2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:VM="clr-namespace:DataControl;assembly=DataControl"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"   
        
        x:Name="ShapeMainWindow"
        Title="{Binding FileName}"
        Height="600" Width="850"
        MinHeight="600" MinWidth="850"
        Icon="Resources/ico/ico.ico" 
        WindowStartupLocation="CenterScreen">
    
    <!--DATA CONTEXT-->
    <Window.DataContext>
        <VM:ApplicationViewModel/>
    </Window.DataContext>
    
    <!-- RESOURCES -->    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Theme/Midnight.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <!--MARKUP -->
    <Grid x:Name="tableGrid">
        <!--SCALING-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
         <!--ELEMENTS-->
        <Menu x:Name="menuPanel">
            <!--MENU-->
            <MenuItem x:Name="menuMi" Header="file">
                <MenuItem.Icon>
                    <Image Source="Resources/images/menu.png" Height="20" Width="25"/>
                </MenuItem.Icon>
                <!--MENU SUB ITEMS-->
                <MenuItem x:Name="newMi" Header="new"
                          Command="{Binding NewFile}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/new.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="openMi" Header="open"
                          Command="{Binding OpenFile}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/add.png"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem x:Name="saveMi" Header="save" Margin="0, 2, 0, 0"
                          Command="{Binding SaveFile}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/save.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="saveAsMi" Header="save as"
                           Command="{Binding SaveAsFile}">
                    <MenuItem.Icon>
                        <Image/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem x:Name="exitMi" Header="exit" Margin="0, 2, 0, 0"
                           Command="{Binding Exit}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/exit.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <!--SHAPES-->
            <MenuItem x:Name="shapesMi" Header="{Binding SelectedShapeName,
                                                 Converter={StaticResource StringConverter}}"
                      ItemsSource="{Binding Path=ShapeNames, 
                                    Converter={StaticResource StringsConverter}}">
                <MenuItem.Icon>
                    <Image Source="Resources/images/pentagon.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Width="40" 
                      Command="{Binding DeleteShape}">
                <MenuItem.Icon>
                    <Image Source="Resources/images/delete.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <!--UNDO REDO-->
            <MenuItem Width="90"
                      Command="{Binding UndoAction}"
                      ItemsSource="{Binding UndoActionNames, 
                            Converter={StaticResource StringsConverter}}"
                      AlternationCount="{Binding ObservableItems.Count}"
                      >
                <MenuItem.Icon>
                    <Image Source="Resources/images/undo.png"/>
                </MenuItem.Icon>
                <MenuItem.Header>
                    <Image Source="Resources/images/arrowDown.png"
                           Height="15" Width="20"/>
                </MenuItem.Header>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction 
                            Command="{Binding UndoAction}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=(ItemsControl.AlternationIndex)}"     />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <MenuItem Width="90"
                      Command="{Binding RedoAction}"
                      ItemsSource="{Binding RedoActionNames, 
                            Converter={StaticResource StringsConverter}}">
                <MenuItem.Icon>
                    <Image Source="Resources/images/redo.png"/>
                </MenuItem.Icon>
                <MenuItem.Header>
                    <Image Source="Resources/images/arrowDown.png" 
                           Height="15" Width="20"/>
                </MenuItem.Header>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction 
                            Command="{Binding RedoAction}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
            <!--PROPERTIES-->
            <MenuItem x:Name="propertiesMi" Header="properties"
                      Command="{Binding CanApplyChanging}">
                <MenuItem.Icon>
                    <Image Source="Resources/images/settings.png"/>
                </MenuItem.Icon>
                
                <MenuItem IsEnabled="False" Header="shape"/>
                <MenuItem x:Name="colorShapeMi" Header="color"
                          Command="{Binding ChangeShapeColor}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/palette.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="opacityMi">
                    <!--ICO-->
                    <MenuItem.Icon>
                        <Image Source="Resources/images/drop.png"/>
                    </MenuItem.Icon>
                    <!--CONTENT-->
                    <MenuItem.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <TextBlock>opacity</TextBlock>

                            <Slider x:Name="OpacitySlider"
                                    Style="{StaticResource StyleForSlider}" Grid.Row="1" 
                                    Width="100"
                                    Minimum="0" Maximum="1"
                                    IsSnapToTickEnabled="True"
                                    TickFrequency="0.1"
                                    Value="{Binding Path=SelectedShape.Opacity}">
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="{Binding Path=OpacitySlider.Thumb.MouseUp}">
                                        <i:InvokeCommandAction 
                                                Command="{Binding ChangeShapeOpacity}"
                                                CommandParameter="{Binding ElementName=OpacitySlider, Path=Value}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>
                        </Grid>

                    </MenuItem.Header>

                </MenuItem>

                <MenuItem IsEnabled="False" Margin="0, 5, 0, 0" Header="stroke"/>
                <MenuItem x:Name="colorStrokeMi" Header="color"
                          Command="{Binding ChangeShapeStrokeColor}">
                    <MenuItem.Icon>
                        <Image Source="Resources/images/palette.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="widthMi">
                    <!--ICO-->
                    <MenuItem.Icon>
                        <Image Source="Resources/images/ruler.png"/>
                    </MenuItem.Icon>
                    <!--CONTENT-->
                    <MenuItem.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <TextBlock>width</TextBlock>

                            <Slider x:Name="StrokeWidthSlider"
                                    Style="{StaticResource StyleForSlider}" Grid.Row="1" 
                                    Width="100"
                                    Minimum="1" Maximum="8"
                                    IsSnapToTickEnabled="True"
                                    TickFrequency="1"
                                    Value="{Binding Path=SelectedShape.StrokeThickness}">
                               
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="{Binding Path=Thumb.MouseUp}">
                                            <i:InvokeCommandAction 
                                                Command="{Binding ChangeStrokeWidth}"
                                                CommandParameter="{Binding ElementName=StrokeWidthSlider, Path=Value}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                            </Slider>
                        </Grid>                        
                    </MenuItem.Header>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!--CANVAS-->
        <DockPanel Grid.Row="1" x:Name="CanvasPanel">
            <ItemsControl ItemsSource="{Binding Canvas}"
                          ItemsPanel="{StaticResource CanvasTemplate}">
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <i:InvokeCommandAction 
                            Command="{Binding AddVertex}"
                            CommandParameter="{Binding ElementName=CanvasPanel}"/>
                    </i:EventTrigger>
                    
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <i:InvokeCommandAction 
                            Command="{Binding SelectShapeByPosition}"
                            CommandParameter="{Binding ElementName=CanvasPanel}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ItemsControl>
        </DockPanel>
        
    </Grid>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction 
                            Command="{Binding Initialize}"
                            CommandParameter="{Binding ElementName=ShapeMainWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
