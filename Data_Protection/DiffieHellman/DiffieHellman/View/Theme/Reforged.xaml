<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--COLORS-->
    <Color x:Key="DefaultColor">#172025</Color>
    
    <Color x:Key="DefaultBtnColor">#698492</Color>
    <Color x:Key="HoverColor">#748792</Color>
    <Color x:Key="PressedColor">#9D8D7A</Color>
    <Color x:Key="DisabledColor">#071218</Color>

    <Color x:Key="WhiteColor">#FFFFFF</Color>
    <Color x:Key="GreenColor">#41D519</Color>
    <Color x:Key="RedColor">#F31D37</Color>
    
    
    
    

    <!--BRUSH-->
    <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}"/>
    
    <SolidColorBrush x:Key="DefaultBtnBrush" Color="{StaticResource DefaultBtnColor}"/>
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
    <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}"/>
    <SolidColorBrush x:Key="DisabledBrush" Color="{StaticResource DisabledColor}"/>

    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource GreenColor}"/>
    <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}"/>





    <!--TEMPLATE-->
    <!--TOOL TIP-->
    <ControlTemplate TargetType="{x:Type ToolTip}" x:Key="ToolTipTemplate">
        <StackPanel Margin="7" >
            <Border CornerRadius="0" BorderThickness="0" Background="{TemplateBinding Background}">
                <ContentPresenter 
                    Margin="2" 
                    HorizontalAlignment="Center" VerticalAlignment="Top"
                    Content="{TemplateBinding Content}" />
            </Border>
        </StackPanel>
    </ControlTemplate>
    <!--BUTTON-->
    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>    



    <!--STYLES-->
    
    <!--WINDOW-->
    <Style TargetType="Window" x:Key="WindowBase">
        <Setter Property="Background" Value="{StaticResource DefaultBrush}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Icon" Value="../ico/key.ico"/>
    </Style>
    
    <Style TargetType="Window" x:Key="WindowStyle" BasedOn="{StaticResource WindowBase}">
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
    </Style>

    <Style TargetType="Window" x:Key="MessageWindow" BasedOn="{StaticResource WindowBase}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
    </Style>
    <!--TOOL TIP-->
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" Value="{StaticResource ToolTipTemplate}"/>
    </Style>
    <!--BUTTON-->
    <Style TargetType="Button" x:Key="ButtonBase">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>

    <Style TargetType="Button" x:Key="BarBtn" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Silver"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DefaultBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="BarBtnRed" BasedOn="{StaticResource BarBtn}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ButtonDefault" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{StaticResource DefaultBtnBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MessageBtn" BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    <!--IMAGES-->
    <Style TargetType="Image" x:Key="BarIco">
        <Setter Property="Margin" Value="2"/>
    </Style>
    
    <!--LABEL-->
    <Style TargetType="Label" x:Key="BarLabelHeader">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="FontSize" Value="25"/>
    </Style>
    
    <Style TargetType="Label" x:Key="LabelBase">
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    
    <Style TargetType="Label" x:Key="Header" BasedOn="{StaticResource LabelBase}">
        <Setter Property="FontSize" Value="25"/>
    </Style>

    <Style TargetType="Label" x:Key="KeyEquality" BasedOn="{StaticResource LabelBase}">
        <Setter Property="Content" Value="Key Equality"/>
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyEqual}" Value="True">
                <Setter Property="Content" Value="Key Is Equal"/>
                <Setter Property="Foreground" Value="{DynamicResource GreenBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsKeyEqual}" Value="False">
                <Setter Property="Content" Value="Key Is Not Equal"/>
                <Setter Property="Foreground" Value="{DynamicResource RedBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--TEXT BOX-->
    <Style TargetType="TextBox" x:Key="TextBoxBase">
        <Setter Property="Margin" Value="6"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <!--TEXT BLOCK-->
    <Style TargetType="TextBlock" x:Key="TextBlockBase">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
</ResourceDictionary>